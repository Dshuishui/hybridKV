// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.11.2
// source: kv.proto

package kvrpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	KV_GetInCausal_FullMethodName          = "/KV/GetInCausal"
	KV_PutInCausal_FullMethodName          = "/KV/PutInCausal"
	KV_GetInWritelessCausal_FullMethodName = "/KV/GetInWritelessCausal"
	KV_PutInWritelessCausal_FullMethodName = "/KV/PutInWritelessCausal"
	KV_GetInWritelessStrong_FullMethodName = "/KV/GetInWritelessStrong"
	KV_PutInWritelessStrong_FullMethodName = "/KV/PutInWritelessStrong"
)

// KVClient is the client API for KV service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type KVClient interface {
	GetInCausal(ctx context.Context, in *GetInCausalRequest, opts ...grpc.CallOption) (*GetInCausalResponse, error)
	PutInCausal(ctx context.Context, in *PutInCausalRequest, opts ...grpc.CallOption) (*PutInCausalResponse, error)
	GetInWritelessCausal(ctx context.Context, in *GetInWritelessCausalRequest, opts ...grpc.CallOption) (*GetInWritelessCausalResponse, error)
	PutInWritelessCausal(ctx context.Context, in *PutInWritelessCausalRequest, opts ...grpc.CallOption) (*PutInWritelessCausalResponse, error)
	GetInWritelessStrong(ctx context.Context, in *GetInWritelessStrongRequest, opts ...grpc.CallOption) (*GetInWritelessStrongResponse, error)
	PutInWritelessStrong(ctx context.Context, in *PutInWritelessStrongRequest, opts ...grpc.CallOption) (*PutInWritelessStrongResponse, error)
}

type kVClient struct {
	cc grpc.ClientConnInterface
}

func NewKVClient(cc grpc.ClientConnInterface) KVClient {
	return &kVClient{cc}
}

func (c *kVClient) GetInCausal(ctx context.Context, in *GetInCausalRequest, opts ...grpc.CallOption) (*GetInCausalResponse, error) {
	out := new(GetInCausalResponse)
	err := c.cc.Invoke(ctx, KV_GetInCausal_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVClient) PutInCausal(ctx context.Context, in *PutInCausalRequest, opts ...grpc.CallOption) (*PutInCausalResponse, error) {
	out := new(PutInCausalResponse)
	err := c.cc.Invoke(ctx, KV_PutInCausal_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVClient) GetInWritelessCausal(ctx context.Context, in *GetInWritelessCausalRequest, opts ...grpc.CallOption) (*GetInWritelessCausalResponse, error) {
	out := new(GetInWritelessCausalResponse)
	err := c.cc.Invoke(ctx, KV_GetInWritelessCausal_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVClient) PutInWritelessCausal(ctx context.Context, in *PutInWritelessCausalRequest, opts ...grpc.CallOption) (*PutInWritelessCausalResponse, error) {
	out := new(PutInWritelessCausalResponse)
	err := c.cc.Invoke(ctx, KV_PutInWritelessCausal_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVClient) GetInWritelessStrong(ctx context.Context, in *GetInWritelessStrongRequest, opts ...grpc.CallOption) (*GetInWritelessStrongResponse, error) {
	out := new(GetInWritelessStrongResponse)
	err := c.cc.Invoke(ctx, KV_GetInWritelessStrong_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kVClient) PutInWritelessStrong(ctx context.Context, in *PutInWritelessStrongRequest, opts ...grpc.CallOption) (*PutInWritelessStrongResponse, error) {
	out := new(PutInWritelessStrongResponse)
	err := c.cc.Invoke(ctx, KV_PutInWritelessStrong_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KVServer is the server API for KV service.
// All implementations must embed UnimplementedKVServer
// for forward compatibility
type KVServer interface {
	GetInCausal(context.Context, *GetInCausalRequest) (*GetInCausalResponse, error)
	PutInCausal(context.Context, *PutInCausalRequest) (*PutInCausalResponse, error)
	GetInWritelessCausal(context.Context, *GetInWritelessCausalRequest) (*GetInWritelessCausalResponse, error)
	PutInWritelessCausal(context.Context, *PutInWritelessCausalRequest) (*PutInWritelessCausalResponse, error)
	GetInWritelessStrong(context.Context, *GetInWritelessStrongRequest) (*GetInWritelessStrongResponse, error)
	PutInWritelessStrong(context.Context, *PutInWritelessStrongRequest) (*PutInWritelessStrongResponse, error)
	mustEmbedUnimplementedKVServer()
}

// UnimplementedKVServer must be embedded to have forward compatible implementations.
type UnimplementedKVServer struct {
}

func (UnimplementedKVServer) GetInCausal(context.Context, *GetInCausalRequest) (*GetInCausalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInCausal not implemented")
}
func (UnimplementedKVServer) PutInCausal(context.Context, *PutInCausalRequest) (*PutInCausalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutInCausal not implemented")
}
func (UnimplementedKVServer) GetInWritelessCausal(context.Context, *GetInWritelessCausalRequest) (*GetInWritelessCausalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInWritelessCausal not implemented")
}
func (UnimplementedKVServer) PutInWritelessCausal(context.Context, *PutInWritelessCausalRequest) (*PutInWritelessCausalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutInWritelessCausal not implemented")
}
func (UnimplementedKVServer) GetInWritelessStrong(context.Context, *GetInWritelessStrongRequest) (*GetInWritelessStrongResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInWritelessStrong not implemented")
}
func (UnimplementedKVServer) PutInWritelessStrong(context.Context, *PutInWritelessStrongRequest) (*PutInWritelessStrongResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutInWritelessStrong not implemented")
}
func (UnimplementedKVServer) mustEmbedUnimplementedKVServer() {}

// UnsafeKVServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to KVServer will
// result in compilation errors.
type UnsafeKVServer interface {
	mustEmbedUnimplementedKVServer()
}

func RegisterKVServer(s grpc.ServiceRegistrar, srv KVServer) {
	s.RegisterService(&KV_ServiceDesc, srv)
}

func _KV_GetInCausal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInCausalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).GetInCausal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KV_GetInCausal_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).GetInCausal(ctx, req.(*GetInCausalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KV_PutInCausal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutInCausalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).PutInCausal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KV_PutInCausal_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).PutInCausal(ctx, req.(*PutInCausalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KV_GetInWritelessCausal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInWritelessCausalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).GetInWritelessCausal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KV_GetInWritelessCausal_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).GetInWritelessCausal(ctx, req.(*GetInWritelessCausalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KV_PutInWritelessCausal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutInWritelessCausalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).PutInWritelessCausal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KV_PutInWritelessCausal_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).PutInWritelessCausal(ctx, req.(*PutInWritelessCausalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KV_GetInWritelessStrong_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInWritelessStrongRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).GetInWritelessStrong(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KV_GetInWritelessStrong_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).GetInWritelessStrong(ctx, req.(*GetInWritelessStrongRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KV_PutInWritelessStrong_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutInWritelessStrongRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVServer).PutInWritelessStrong(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: KV_PutInWritelessStrong_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVServer).PutInWritelessStrong(ctx, req.(*PutInWritelessStrongRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// KV_ServiceDesc is the grpc.ServiceDesc for KV service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var KV_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "KV",
	HandlerType: (*KVServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInCausal",
			Handler:    _KV_GetInCausal_Handler,
		},
		{
			MethodName: "PutInCausal",
			Handler:    _KV_PutInCausal_Handler,
		},
		{
			MethodName: "GetInWritelessCausal",
			Handler:    _KV_GetInWritelessCausal_Handler,
		},
		{
			MethodName: "PutInWritelessCausal",
			Handler:    _KV_PutInWritelessCausal_Handler,
		},
		{
			MethodName: "GetInWritelessStrong",
			Handler:    _KV_GetInWritelessStrong_Handler,
		},
		{
			MethodName: "PutInWritelessStrong",
			Handler:    _KV_PutInWritelessStrong_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kv.proto",
}
